-- programs ------------------------------------------------

entrypoints Program ;

Pdefs.   Program ::= [Def] ;

DFun.	           Def ::= Type Ident "(" [Arg] ")" Blk ;
separator nonempty Def "" ;

ADecl.     Arg ::= Type Ident;
separator  Arg "," ;

-- statements ----------------------------------------------

Block.     Blk ::= "{" [Stm] "}" ;

separator  Stm "" ;
Empty.     Stm ::= ";" ;
SBlock.    Stm ::= Blk ;
SDecls.    Stm ::= Type [Item] ";" ;
SAss.      Stm ::= Ident "=" Exp  ";" ;
SIncr.     Stm ::= Ident "++"  ";" ;
SDecr.     Stm ::= Ident "--"  ";" ;
SReturn.   Stm ::= "return" Exp ";" ;
VRet.      Stm ::= "return" ";" ;
SIf.       Stm ::= "if" "(" Exp ")" Stm  ;
SIfElse.   Stm ::= "if" "(" Exp ")" Stm "else" Stm  ;
SWhile.    Stm ::= "while" "(" Exp ")" Stm ;
SExp.      Stm ::= Exp  ";" ;

NoInit.            Item ::= Ident ;
Init.              Item ::= Ident "=" Exp ;
separator nonempty Item "," ;

-- Types ---------------------------------------------------

Int.       Type ::= "int" ;
Double.    Type ::= "double" ;
Bool.      Type ::= "boolean" ;
Void.      Type ::= "void" ;

internal   Fun. Type ::= Type "(" [Type] ")" ;

separator  Type "," ;

-- Expressions ---------------------------------------------

EVar.      Exp6 ::= Ident ;
EInt.      Exp6 ::= Integer ;
EDouble.   Exp6 ::= Double;
ETrue.     Exp6 ::= "true" ;
EFalse.    Exp6 ::= "false" ;
EApp.      Exp6 ::= Ident "(" [Exp] ")" ;
EString.   Exp6 ::= String ;

ENeg.      Exp5 ::= "-" Exp6 ;
ENot.      Exp5 ::= "!" Exp6 ;

EMul.      Exp4 ::= Exp4 MulOp Exp5 ;

EAdd.      Exp3 ::= Exp3 AddOp Exp4 ;

ECmp.      Exp2 ::= Exp2 CmpOp Exp3 ;

EAnd.      Exp1 ::= Exp2 "&&" Exp1 ;

EOr.       Exp ::= Exp1 "||" Exp ;

coercions  Exp 6 ;

separator  Exp "," ;

-- operators -----------------------------------------------

OPlus.      AddOp ::= "+" ;
OMinus.     AddOp ::= "-" ;
OTimes.     MulOp ::= "*" ;
ODiv.       MulOp ::= "/" ;
OMod.       MulOp ::= "%" ;
OLt.        CmpOp ::= "<" ;
OLtEq.      CmpOp ::= "<=" ;
OGt.        CmpOp ::= ">" ;
OGtEq.      CmpOp ::= ">=" ;
OEq.        CmpOp ::= "==" ;
ONeq.       CmpOp ::= "!=" ;

-- comments ------------------------------------------------

comment    "#" ;

comment    "//" ;

comment    "/*" "*/" ;

