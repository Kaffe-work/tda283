-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from src/Javalette/Par.y
-----------------------------------------------------------------------------

state 109 contains 1 shift/reduce conflicts.

rule 35 is unused
rule 36 is unused
rule 37 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	Double -> L_doubl                                  (3)
	String -> L_quoted                                 (4)
	Program -> ListDef                                 (5)
	Def -> Type Ident '(' ListArg ')' '{' ListStm '}'   (6)
	ListDef -> Def                                     (7)
	ListDef -> Def ListDef                             (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	ListStm ->                                         (13)
	ListStm -> ListStm Stm                             (14)
	Stm -> ';'                                         (15)
	Stm -> '{' ListStm '}'                             (16)
	Stm -> Type ListItem ';'                           (17)
	Stm -> Ident '=' Exp ';'                           (18)
	Stm -> Ident '++' ';'                              (19)
	Stm -> Ident '--' ';'                              (20)
	Stm -> 'return' Exp ';'                            (21)
	Stm -> 'return' ';'                                (22)
	Stm -> 'if' '(' Exp ')' Stm                        (23)
	Stm -> 'if' '(' Exp ')' Stm 'else' Stm             (24)
	Stm -> 'while' '(' Exp ')' Stm                     (25)
	Stm -> Exp ';'                                     (26)
	Item -> Ident                                      (27)
	Item -> Ident '=' Exp                              (28)
	ListItem -> Item                                   (29)
	ListItem -> Item ',' ListItem                      (30)
	Type -> 'int'                                      (31)
	Type -> 'double'                                   (32)
	Type -> 'boolean'                                  (33)
	Type -> 'void'                                     (34)
	ListType ->                                        (35)
	ListType -> Type                                   (36)
	ListType -> Type ',' ListType                      (37)
	Exp6 -> Ident                                      (38)
	Exp6 -> Integer                                    (39)
	Exp6 -> Double                                     (40)
	Exp6 -> 'true'                                     (41)
	Exp6 -> 'false'                                    (42)
	Exp6 -> Ident '(' ListExp ')'                      (43)
	Exp6 -> String                                     (44)
	Exp6 -> '(' Exp ')'                                (45)
	Exp5 -> '-' Exp6                                   (46)
	Exp5 -> '!' Exp6                                   (47)
	Exp5 -> Exp6                                       (48)
	Exp4 -> Exp4 MulOp Exp5                            (49)
	Exp4 -> Exp5                                       (50)
	Exp3 -> Exp3 AddOp Exp4                            (51)
	Exp3 -> Exp4                                       (52)
	Exp2 -> Exp2 CmpOp Exp3                            (53)
	Exp2 -> Exp3                                       (54)
	Exp1 -> Exp2 '&&' Exp1                             (55)
	Exp1 -> Exp2                                       (56)
	Exp -> Exp1 '||' Exp                               (57)
	Exp -> Exp1                                        (58)
	ListExp ->                                         (59)
	ListExp -> Exp                                     (60)
	ListExp -> Exp ',' ListExp                         (61)
	AddOp -> '+'                                       (62)
	AddOp -> '-'                                       (63)
	MulOp -> '*'                                       (64)
	MulOp -> '/'                                       (65)
	MulOp -> '%'                                       (66)
	CmpOp -> '<'                                       (67)
	CmpOp -> '<='                                      (68)
	CmpOp -> '>'                                       (69)
	CmpOp -> '>='                                      (70)
	CmpOp -> '=='                                      (71)
	CmpOp -> '!='                                      (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'boolean'      { PT _ (TS _ 21) }
	'double'       { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'return'       { PT _ (TS _ 27) }
	'true'         { PT _ (TS _ 28) }
	'void'         { PT _ (TS _ 29) }
	'while'        { PT _ (TS _ 30) }
	'{'            { PT _ (TS _ 31) }
	'||'           { PT _ (TS _ 32) }
	'}'            { PT _ (TS _ 33) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	Double          rule  3
	String          rule  4
	Program         rule  5
	Def             rule  6
	ListDef         rules 7, 8
	Arg             rule  9
	ListArg         rules 10, 11, 12
	ListStm         rules 13, 14
	Stm             rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
	Item            rules 27, 28
	ListItem        rules 29, 30
	Type            rules 31, 32, 33, 34
	ListType        rules 35, 36, 37
	Exp6            rules 38, 39, 40, 41, 42, 43, 44, 45
	Exp5            rules 46, 47, 48
	Exp4            rules 49, 50
	Exp3            rules 51, 52
	Exp2            rules 53, 54
	Exp1            rules 55, 56
	Exp             rules 57, 58
	ListExp         rules 59, 60, 61
	AddOp           rules 62, 63
	MulOp           rules 64, 65, 66
	CmpOp           rules 67, 68, 69, 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	Def            goto state 4
	ListDef        goto state 5
	Type           goto state 6

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListDef -> Def .                                    (rule 7)
	ListDef -> Def . ListDef                            (rule 8)

	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 7

	Def            goto state 4
	ListDef        goto state 12
	Type           goto state 6

State 5

	Program -> ListDef .                                (rule 5)

	%eof           reduce using rule 5


State 6

	Def -> Type . Ident '(' ListArg ')' '{' ListStm '}'    (rule 6)

	L_ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 33)

	L_ident        reduce using rule 33


State 8

	Type -> 'double' .                                  (rule 32)

	L_ident        reduce using rule 32


State 9

	Type -> 'int' .                                     (rule 31)

	L_ident        reduce using rule 31


State 10

	Type -> 'void' .                                    (rule 34)

	L_ident        reduce using rule 34


State 11

	Def -> Type Ident . '(' ListArg ')' '{' ListStm '}'    (rule 6)

	'('            shift, and enter state 13


State 12

	ListDef -> Def ListDef .                            (rule 8)

	%eof           reduce using rule 8


State 13

	Def -> Type Ident '(' . ListArg ')' '{' ListStm '}'    (rule 6)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 19


State 15

	Def -> Type Ident '(' ListArg . ')' '{' ListStm '}'    (rule 6)

	')'            shift, and enter state 18


State 16

	Arg -> Type . Ident                                 (rule 9)

	L_ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 18

	Def -> Type Ident '(' ListArg ')' . '{' ListStm '}'    (rule 6)

	'{'            shift, and enter state 21


State 19

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'int'          shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 20
	Type           goto state 16

State 20

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 21

	Def -> Type Ident '(' ListArg ')' '{' . ListStm '}'    (rule 6)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'double'       reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_doubl        reduce using rule 13
	L_quoted       reduce using rule 13

	ListStm        goto state 22

State 22

	Def -> Type Ident '(' ListArg ')' '{' ListStm . '}'    (rule 6)
	ListStm -> ListStm . Stm                            (rule 14)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 9
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 10
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	'}'            shift, and enter state 46
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Stm            goto state 27
	Type           goto state 28
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 35

State 23

	Stm -> Ident . '=' Exp ';'                          (rule 18)
	Stm -> Ident . '++' ';'                             (rule 19)
	Stm -> Ident . '--' ';'                             (rule 20)
	Exp6 -> Ident .                                     (rule 38)
	Exp6 -> Ident . '(' ListExp ')'                     (rule 43)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 79
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           shift, and enter state 80
	'-'            reduce using rule 38
	'--'           shift, and enter state 81
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            shift, and enter state 82
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 24

	Exp6 -> Integer .                                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 25

	Exp6 -> Double .                                    (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 26

	Exp6 -> String .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 27

	ListStm -> ListStm Stm .                            (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'boolean'      reduce using rule 14
	'double'       reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_doubl        reduce using rule 14
	L_quoted       reduce using rule 14


State 28

	Stm -> Type . ListItem ';'                          (rule 17)

	L_ident        shift, and enter state 2

	Ident          goto state 76
	Item           goto state 77
	ListItem       goto state 78

State 29

	Exp5 -> Exp6 .                                      (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 30

	Exp4 -> Exp5 .                                      (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 31

	Exp4 -> Exp4 . MulOp Exp5                           (rule 49)
	Exp3 -> Exp4 .                                      (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 73
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 74
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 75
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 72

State 32

	Exp3 -> Exp3 . AddOp Exp4                           (rule 51)
	Exp2 -> Exp3 .                                      (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 70
	','            reduce using rule 54
	'-'            shift, and enter state 71
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 69

State 33

	Exp2 -> Exp2 . CmpOp Exp3                           (rule 53)
	Exp1 -> Exp2 . '&&' Exp1                            (rule 55)
	Exp1 -> Exp2 .                                      (rule 56)

	'!='           shift, and enter state 62
	'&&'           shift, and enter state 63
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'<'            shift, and enter state 64
	'<='           shift, and enter state 65
	'=='           shift, and enter state 66
	'>'            shift, and enter state 67
	'>='           shift, and enter state 68
	'||'           reduce using rule 56

	CmpOp          goto state 61

State 34

	Exp -> Exp1 . '||' Exp                              (rule 57)
	Exp -> Exp1 .                                       (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'||'           shift, and enter state 60


State 35

	Stm -> Exp . ';'                                    (rule 26)

	';'            shift, and enter state 59


State 36

	Exp5 -> '!' . Exp6                                  (rule 47)

	'('            shift, and enter state 37
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 58

State 37

	Exp6 -> '(' . Exp ')'                               (rule 45)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 57

State 38

	Exp5 -> '-' . Exp6                                  (rule 46)

	'('            shift, and enter state 37
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 56

State 39

	Stm -> ';' .                                        (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'boolean'      reduce using rule 15
	'double'       reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_doubl        reduce using rule 15
	L_quoted       reduce using rule 15


State 40

	Exp6 -> 'false' .                                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 41

	Stm -> 'if' . '(' Exp ')' Stm                       (rule 23)
	Stm -> 'if' . '(' Exp ')' Stm 'else' Stm            (rule 24)

	'('            shift, and enter state 55


State 42

	Stm -> 'return' . Exp ';'                           (rule 21)
	Stm -> 'return' . ';'                               (rule 22)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 54
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 53

State 43

	Exp6 -> 'true' .                                    (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 44

	Stm -> 'while' . '(' Exp ')' Stm                    (rule 25)

	'('            shift, and enter state 51


State 45

	Stm -> '{' . ListStm '}'                            (rule 16)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'double'       reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_doubl        reduce using rule 13
	L_quoted       reduce using rule 13

	ListStm        goto state 50

State 46

	Def -> Type Ident '(' ListArg ')' '{' ListStm '}' .    (rule 6)

	'boolean'      reduce using rule 6
	'double'       reduce using rule 6
	'int'          reduce using rule 6
	'void'         reduce using rule 6
	%eof           reduce using rule 6


State 47

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 48

	Double -> L_doubl .                                 (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 49

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'||'           reduce using rule 4


State 50

	ListStm -> ListStm . Stm                            (rule 14)
	Stm -> '{' ListStm . '}'                            (rule 16)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 9
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 10
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	'}'            shift, and enter state 100
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Stm            goto state 27
	Type           goto state 28
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 35

State 51

	Stm -> 'while' '(' . Exp ')' Stm                    (rule 25)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 99

State 52

	Exp6 -> Ident .                                     (rule 38)
	Exp6 -> Ident . '(' ListExp ')'                     (rule 43)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            shift, and enter state 79
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 53

	Stm -> 'return' Exp . ';'                           (rule 21)

	';'            shift, and enter state 98


State 54

	Stm -> 'return' ';' .                               (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'double'       reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_doubl        reduce using rule 22
	L_quoted       reduce using rule 22


State 55

	Stm -> 'if' '(' . Exp ')' Stm                       (rule 23)
	Stm -> 'if' '(' . Exp ')' Stm 'else' Stm            (rule 24)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 97

State 56

	Exp5 -> '-' Exp6 .                                  (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 57

	Exp6 -> '(' Exp . ')'                               (rule 45)

	')'            shift, and enter state 96


State 58

	Exp5 -> '!' Exp6 .                                  (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 59

	Stm -> Exp ';' .                                    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'double'       reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_doubl        reduce using rule 26
	L_quoted       reduce using rule 26


State 60

	Exp -> Exp1 '||' . Exp                              (rule 57)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 95

State 61

	Exp2 -> Exp2 CmpOp . Exp3                           (rule 53)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 94

State 62

	CmpOp -> '!=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_doubl        reduce using rule 72
	L_quoted       reduce using rule 72


State 63

	Exp1 -> Exp2 '&&' . Exp1                            (rule 55)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 93

State 64

	CmpOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_doubl        reduce using rule 67
	L_quoted       reduce using rule 67


State 65

	CmpOp -> '<=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_doubl        reduce using rule 68
	L_quoted       reduce using rule 68


State 66

	CmpOp -> '==' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_doubl        reduce using rule 71
	L_quoted       reduce using rule 71


State 67

	CmpOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_doubl        reduce using rule 69
	L_quoted       reduce using rule 69


State 68

	CmpOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_doubl        reduce using rule 70
	L_quoted       reduce using rule 70


State 69

	Exp3 -> Exp3 AddOp . Exp4                           (rule 51)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 92

State 70

	AddOp -> '+' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_doubl        reduce using rule 62
	L_quoted       reduce using rule 62


State 71

	AddOp -> '-' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_doubl        reduce using rule 63
	L_quoted       reduce using rule 63


State 72

	Exp4 -> Exp4 MulOp . Exp5                           (rule 49)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 91

State 73

	MulOp -> '%' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_doubl        reduce using rule 66
	L_quoted       reduce using rule 66


State 74

	MulOp -> '*' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_doubl        reduce using rule 64
	L_quoted       reduce using rule 64


State 75

	MulOp -> '/' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_doubl        reduce using rule 65
	L_quoted       reduce using rule 65


State 76

	Item -> Ident .                                     (rule 27)
	Item -> Ident . '=' Exp                             (rule 28)

	','            reduce using rule 27
	';'            reduce using rule 27
	'='            shift, and enter state 90


State 77

	ListItem -> Item .                                  (rule 29)
	ListItem -> Item . ',' ListItem                     (rule 30)

	','            shift, and enter state 89
	';'            reduce using rule 29


State 78

	Stm -> Type ListItem . ';'                          (rule 17)

	';'            shift, and enter state 88


State 79

	Exp6 -> Ident '(' . ListExp ')'                     (rule 43)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 59
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 86
	ListExp        goto state 87

State 80

	Stm -> Ident '++' . ';'                             (rule 19)

	';'            shift, and enter state 85


State 81

	Stm -> Ident '--' . ';'                             (rule 20)

	';'            shift, and enter state 84


State 82

	Stm -> Ident '=' . Exp ';'                          (rule 18)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 83

State 83

	Stm -> Ident '=' Exp . ';'                          (rule 18)

	';'            shift, and enter state 107


State 84

	Stm -> Ident '--' ';' .                             (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'double'       reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_doubl        reduce using rule 20
	L_quoted       reduce using rule 20


State 85

	Stm -> Ident '++' ';' .                             (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'double'       reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_doubl        reduce using rule 19
	L_quoted       reduce using rule 19


State 86

	ListExp -> Exp .                                    (rule 60)
	ListExp -> Exp . ',' ListExp                        (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 106


State 87

	Exp6 -> Ident '(' ListExp . ')'                     (rule 43)

	')'            shift, and enter state 105


State 88

	Stm -> Type ListItem ';' .                          (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'double'       reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_doubl        reduce using rule 17
	L_quoted       reduce using rule 17


State 89

	ListItem -> Item ',' . ListItem                     (rule 30)

	L_ident        shift, and enter state 2

	Ident          goto state 76
	Item           goto state 77
	ListItem       goto state 104

State 90

	Item -> Ident '=' . Exp                             (rule 28)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 103

State 91

	Exp4 -> Exp4 MulOp Exp5 .                           (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 92

	Exp4 -> Exp4 . MulOp Exp5                           (rule 49)
	Exp3 -> Exp3 AddOp Exp4 .                           (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 73
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 74
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 75
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 72

State 93

	Exp1 -> Exp2 '&&' Exp1 .                            (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'||'           reduce using rule 55


State 94

	Exp3 -> Exp3 . AddOp Exp4                           (rule 51)
	Exp2 -> Exp2 CmpOp Exp3 .                           (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 70
	','            reduce using rule 53
	'-'            shift, and enter state 71
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 69

State 95

	Exp -> Exp1 '||' Exp .                              (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57


State 96

	Exp6 -> '(' Exp ')' .                               (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 97

	Stm -> 'if' '(' Exp . ')' Stm                       (rule 23)
	Stm -> 'if' '(' Exp . ')' Stm 'else' Stm            (rule 24)

	')'            shift, and enter state 102


State 98

	Stm -> 'return' Exp ';' .                           (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'double'       reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_doubl        reduce using rule 21
	L_quoted       reduce using rule 21


State 99

	Stm -> 'while' '(' Exp . ')' Stm                    (rule 25)

	')'            shift, and enter state 101


State 100

	Stm -> '{' ListStm '}' .                            (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'double'       reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_doubl        reduce using rule 16
	L_quoted       reduce using rule 16


State 101

	Stm -> 'while' '(' Exp ')' . Stm                    (rule 25)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 9
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 10
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Stm            goto state 110
	Type           goto state 28
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 35

State 102

	Stm -> 'if' '(' Exp ')' . Stm                       (rule 23)
	Stm -> 'if' '(' Exp ')' . Stm 'else' Stm            (rule 24)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 9
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 10
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Stm            goto state 109
	Type           goto state 28
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 35

State 103

	Item -> Ident '=' Exp .                             (rule 28)

	','            reduce using rule 28
	';'            reduce using rule 28


State 104

	ListItem -> Item ',' ListItem .                     (rule 30)

	';'            reduce using rule 30


State 105

	Exp6 -> Ident '(' ListExp ')' .                     (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 106

	ListExp -> Exp ',' . ListExp                        (rule 61)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 59
	'-'            shift, and enter state 38
	'false'        shift, and enter state 40
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 52
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 86
	ListExp        goto state 108

State 107

	Stm -> Ident '=' Exp ';' .                          (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'double'       reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_doubl        reduce using rule 18
	L_quoted       reduce using rule 18


State 108

	ListExp -> Exp ',' ListExp .                        (rule 61)

	')'            reduce using rule 61


State 109

	Stm -> 'if' '(' Exp ')' Stm .                       (rule 23)
	Stm -> 'if' '(' Exp ')' Stm . 'else' Stm            (rule 24)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'double'       reduce using rule 23
	'else'         shift, and enter state 111
			(reduce using rule 23)

	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_doubl        reduce using rule 23
	L_quoted       reduce using rule 23


State 110

	Stm -> 'while' '(' Exp ')' Stm .                    (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'double'       reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_doubl        reduce using rule 25
	L_quoted       reduce using rule 25


State 111

	Stm -> 'if' '(' Exp ')' Stm 'else' . Stm            (rule 24)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 39
	'boolean'      shift, and enter state 7
	'double'       shift, and enter state 8
	'false'        shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 9
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'void'         shift, and enter state 10
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 47
	L_doubl        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 23
	Integer        goto state 24
	Double         goto state 25
	String         goto state 26
	Stm            goto state 112
	Type           goto state 28
	Exp6           goto state 29
	Exp5           goto state 30
	Exp4           goto state 31
	Exp3           goto state 32
	Exp2           goto state 33
	Exp1           goto state 34
	Exp            goto state 35

State 112

	Stm -> 'if' '(' Exp ')' Stm 'else' Stm .            (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'double'       reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_doubl        reduce using rule 24
	L_quoted       reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 37
Number of non-terminals: 27
Number of states: 113
